{% set name = "deepmd-kit" %}
{% set version = "2.2.11" %}
{% set lammps_version = "stable_2Aug2023" %}
{% set lammps_date = datetime.datetime.strptime(lammps_version.split('_')[1], "%d%b%Y") %}
{% set lammps_conda_version = "{:%Y.%m.%d}".format(lammps_date) %}
{% set proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/deepmodeling/{{ name }}/archive/v{{ version }}.tar.gz
    sha256: d22893a08c2556c5cb29682378105849cf672545c91ee52b10a97da6e9075ac3
  - url: https://github.com/lammps/lammps/archive/{{ lammps_version }}.tar.gz
    sha256: 48dc8b0b0583689e80ea2052275acbc3e3fce89707ac557e120db5564257f7df
    folder: lammps

build:
  number: 1
  {% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ mpi_prefix }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ mpi_prefix }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  skip: true  # [win]
  skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]
  skip: true  # [py<39]
  # https://github.com/conda-forge/tensorflow-feedstock/pull/367#issuecomment-1890751416
  skip: true  # [py==312 and cuda_compiler_version in ("11.2", "11.8")]

requirements:
  build:
    - {{ stdlib("c") }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake >=3.23
    - make  # [unix]
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ mpi }}  # [build_platform != target_platform and mpi == "openmpi"]

  host:
    - python
    - pip
    - scikit-build-core
    - hatch-fancy-pypi-readme
    - tensorflow  # [not (cuda_compiler_version or "").startswith("11")]
    # https://github.com/conda-forge/tensorflow-feedstock/pull/367#issuecomment-1890751416
    - tensorflow 2.14.*  # [(cuda_compiler_version or "").startswith("11")]
    - tensorflow * {{ proc_type }}*
    - setuptools_scm
    - {{ mpi }}
    - cub  # [cuda_compiler_version == '10.2']
    - cuda-cudart-dev  # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or "").startswith("12")]

  run:
    - python
    - tensorflow
    - tensorflow * {{ proc_type }}*
    - tf-keras {{ tensorflow }}  # [not (cuda_compiler_version or "").startswith("11")]
    - numpy
    - scipy
    - dargs >=0.4.1
    - pyyaml
    - {{ mpi }}
    - python-hostlist >=1.21
    - h5py
    - wcmatch
    - packaging

  run_constrained:
    - lammps {{ lammps_conda_version }} *_{{ mpi_prefix }}_*

test:
  files:
    - water_se_a.json
    - water.lmp  # [py<312]
    - in.lammps  # [py<312]
  source_files:
    - examples/water/data
  imports:
    - deepmd
  requires:
    - pip
    # this version of lammps doesn't have py312
    - lammps  # [py<312]
    # workaround until conda-forge/conda-forge-repodata-patches-feedstock#787 is merged
    - libpnetcdf 1.12.3  # [py<312]
  commands:
    - pip check
    - dp -h
    - dp train -h
    - dp freeze -h
    - dp test -h
    - mv examples/water/data/data_0 ./data
    - dp train water_se_a.json
    - dp freeze -o frozen_model.pb
    - export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes OMPI_MCA_plm_ssh_agent=false  # [mpi == "openmpi" and py<312]
    - mpiexec -n 1 lmp_mpi -in in.lammps  # [py<312]

about:
  home: https://github.com/deepmodeling/deepmd-kit
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE
  summary: A deep learning package for many-body potential energy representation and molecular dynamics
  doc_url: https://github.com/deepmodeling/deepmd-kit
  dev_url: https://github.com/deepmodeling/deepmd-kit

extra:
  recipe-maintainers:
    - njzjz
