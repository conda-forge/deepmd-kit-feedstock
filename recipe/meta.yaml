{% set name = "deepmd-kit" %}
{% set version = "2.2.0" %}
{% set lammps_version = "stable_23Jun2022_update1" %}
{% set lammps_date = datetime.datetime.strptime(lammps_version.split('_')[1], "%d%b%Y") %}
{% set lammps_conda_version = "{:%Y.%m.%d}".format(lammps_date) %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/deepmodeling/{{ name }}/archive/v{{ version }}.tar.gz
    sha256: 377fcaba413259c0f0372aa47a42ff317f2b8865652229a92725b80c40a486b8
    patches:
      - 0001-fix-clang.patch
      - 0002-read-cmake-args.patch
      - 0003-fix-lmp.patch
      - 0004-loader-path.patch
      - 0005-remove-py-abi.patch
      - 0006-fix-macos-op.patch
      - win.patch  # [win]
  - url: https://github.com/lammps/lammps/archive/{{ lammps_version }}.tar.gz
    sha256: 58e3b2b984f8935bb0db5631e143be2826c45ffd48844f7c394f36624a3e17a2
    folder: lammps

build:
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
  skip: true  # [win]
  skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake >=3.7
    - make  # [unix]
    - ninja
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]

  host:
    - python
    - pip
    - scikit-build
    - m2r
    - tensorflow
    - libtensorflow_cc
    - setuptools_scm
    - {{ mpi }}
    - cub  # [cuda_compiler_version == '10.2']

  run:
    - python
    - tensorflow
    - libtensorflow_cc
    - numpy
    - scipy
    - dargs >=0.2.6
    - pyyaml
    - {{ mpi }}
    - python-hostlist >=1.21
    - h5py
    - wcmatch
    - packaging

  run_constrained:
    - lammps {{ lammps_conda_version }}  # [linux]

test:
  files:
    - water_se_a.json
    - water.lmp
    - in.lammps
  source_files:
    - examples/water/data
  imports:
    - deepmd
  requires:
    - pip
    - lammps
  commands:
    - pip check
    - dp -h
    - dp train -h
    - dp freeze -h
    - dp test -h
    - mv examples/water/data/data_0 ./data
    - dp train water_se_a.json
    - dp freeze -o frozen_model.pb
    - mpiexec -n 1 lmp_mpi -in in.lammps  # [mpi == 'mpich']

about:
  home: https://github.com/deepmodeling/deepmd-kit
  license: LGPL-3.0-only
  license_family: LGPL
  license_file: LICENSE
  summary: A deep learning package for many-body potential energy representation and molecular dynamics
  doc_url: https://github.com/deepmodeling/deepmd-kit
  dev_url: https://github.com/deepmodeling/deepmd-kit

extra:
  recipe-maintainers:
    - njzjz
